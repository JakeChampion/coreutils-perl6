#!/usr/bin/env perl6
my %*SUB-MAIN-OPTS =
	:named-anywhere;

sub tput ($term) {
	print("\t$term");
}

my &wc = {
	{
		l => .lines.elems,
		w => .words.elems,
		c => .encode.bytes,
		m => .codes,
		r => .chars
	}
}
	# my $name = $io.Str;
	# my $input = $io.slurp;

	# my $active-options = $options.values.grep({$_});

	# tput $linecount if $options<l> or $active-options == 0;
	# tput $wordcount if $options<w> or $active-options == 0;
	# tput $bytecount if $options<c> or $active-options == 0;
	# tput $codecount if $options<m>;
	# tput $runecount if $options<r>;
	# tput $name if $count > 1;
	# put();

sub MAIN (
	*@files where ?*.grep({.IO.f}),
	Bool :$l, #= lines
	Bool :$w, #= words
	Bool :$c, #= bytes
	Bool :$m, #= codepoints
	Bool :$r, #= runes
) {
	my $flag-count = [+] [?$l, ?$w, ?$c, ?$m, ?$r];
	my $use-defaults = !?$flag-count;
	my $options = [
		:l($l || $use-defaults),
		:w($w || $use-defaults),
		:c($c || $use-defaults),
		:m($m),
		:r($r)
	].grep(*.value).map(*.key);

	my %totals;

	for @files -> $file {
		my %counts = wc($file.IO.slurp);

		for %counts.kv -> $key, $value {
			%totals<<$key>> += $value;
		}

		for $options.comb -> $key {
			my $count = %counts<<$key>>;
			if ($options.elems == 1) {
				print($count);
			} else {
				tput($count);
			}
		}

		if (@files.elems > 1) {
			tput $file.Str;
		}

		put();
	}

	if (@files.elems > 1) {
		for $options.comb -> $key {
			my $count = %totals<<$key>>;
			if ($options.elems == 1) {
				print($count);
			} else {
				tput($count);
			}
		}
		tput ｢total｣;
		put();
	}
}

sub USAGE {
	put qq｢$*PROGRAM-NAME - print line, word, and byte counts for each file\n｣;
	put ｢the options may be used to select counts to print｣;
	put ｢always in this order: lines, words, bytes, codepoints, runes.｣ ~ "\n";
	put $*USAGE;
}
